name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Validate commit messages
        run: |
          # Check if commitlint is available and run it
          if [ -f "commitlint.config.cjs" ]; then
            echo "Validating commit messages..."
            npx commitlint --from=origin/${{ github.base_ref }} --to=HEAD --verbose
          else
            echo "No commitlint config found, skipping commit message validation"
          fi

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check for vulnerabilities
        run: |
          # Run bun audit and capture output
          if ! bun audit --audit-level moderate; then
            echo "::warning::Moderate or higher vulnerabilities found in dependencies"
            echo "Please review and update vulnerable packages"
          fi

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build and analyze bundle
        run: |
          bun run build
          echo "Build completed successfully"

          # Check .next directory size
          if [ -d ".next" ]; then
            SIZE=$(du -sk .next | cut -f1)
            echo "Bundle size: ${SIZE}KB"

            # Alert if bundle is too large (>50MB)
            if [ $SIZE -gt 51200 ]; then
              echo "::warning::Bundle size is quite large (${SIZE}KB). Consider optimizing."
            fi
          fi
